{"version":3,"sources":["components/AddCategory.tsx","components/GifGridItem.tsx","services/gifs.petition.ts","components/GifGrid.tsx","hooks/useFetchGifs.ts","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAOaA,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAmC,EAC5BC,mBAAS,IADmB,mBACzDC,EADyD,KAC7CC,EAD6C,KAehE,OACC,sBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAGhCR,GAAc,SAACS,GAAD,OAAoBP,GAApB,mBAAmCO,OACjDN,EAAc,MAId,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdd,SAACP,GAAD,OAAYF,EAAcE,EAAEQ,OAAOF,a,QCRjDG,EAAc,SAACC,GAC3B,OACC,sBAAKC,UAAU,yCAAf,UACC,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,4BAAIL,EAAIK,Y,uBCNEC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBL,EADgB,mGACkFM,UAAUF,IAD5F,SAEHG,MAAMP,GAFH,cAEhBQ,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAI,SAACf,GAAc,IAAD,EACnC,MAAO,CACNgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QATd,kBAafW,GAbe,4CAAH,sDCKPK,EAAU,SAAC,GAAwC,IAAtCZ,EAAqC,EAArCA,SAAqC,ECHnC,SAACA,GAAsB,IAAD,EACvBrB,mBAAS,CAClC2B,KAAM,GACNO,SAAS,IAHuC,mBAC1CC,EAD0C,KACnCC,EADmC,KAejD,OATAC,qBAAU,WACTjB,EAAQC,GAAUiB,MAAK,SAACC,GAAD,OACtBH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAGT,CAACb,IAEGc,EDL2BK,CAAanB,GAAjCU,EAPgD,EAOtDJ,KAAcO,EAPwC,EAOxCA,QAEtB,OACC,qCACC,oBAAInB,UAAU,oCAAd,SAAmDM,IAElDa,GAAW,mBAAGnB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACEgB,EAAOF,KAAI,SAACf,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIgB,aElBdW,EAAe,WAAO,IAAD,EACGzC,mBAAS,CAAC,cADb,mBAC1B0C,EAD0B,KACd3C,EADc,KAQjC,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACE2C,EAAWb,KAAI,SAACR,GAAD,OAEf,aADA,CACC,EAAD,CAAwBA,SAAUA,GAApBA,YCfnBsB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.5e875be9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface CategoryProps {\n\tsetCategories: (categories: any) => void;\n}\n\nexport const AddCategory = ({ setCategories }: CategoryProps) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = (e: any) => setInputValue(e.target.value);\n\n\tconst handleSubmit = (e: any) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length <= 2) {\n\t\t\treturn;\n\t\t}\n\t\tsetCategories((cat: string[]) => [inputValue, ...cat]);\n\t\tsetInputValue('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n","import { ImageAdto } from '../adto/image.adto';\n\nexport const GifGridItem = (img: ImageAdto) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={img.url} alt={img.title} />\n\t\t\t<p>{img.title}</p>\n\t\t</div>\n\t);\n};\n","export const getGifs = async (category: string) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?api_key=XnuIZE5jeIuOmS6cVhFbZDbafGkkR6ZZ&limit=10&q=${encodeURI(category)}`;\n\tconst resp = await fetch(url);\n\tconst { data } = await resp.json();\n\n\tconst gifs = data.map((img: any) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url,\n\t\t};\n\t});\n\n\treturn gifs;\n};\n","import { GifGridItem } from './GifGridItem';\n\nimport { ImageAdto } from '../adto/image.adto';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }: { category: string }) => {\n\t// const [images, setImages] = useState([]);\n\n\t// useEffect(() => {\n\t// \tgetGifs(category).then(setImages);\n\t// }, [category]);\n\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{images.map((img: ImageAdto) => (\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../services/gifs.petition';\nexport const useFetchGifs = (category: string) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((imgs) =>\n\t\t\tsetState({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t})\n\t\t);\n\t}, [category]);\n\n\treturn state;\n};\n","import { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['One Punch']);\n\n\t// const handleAdd = () => {\n\t// \tconst name = 'SNK';\n\t// \tsetCategories([...categories, name]);\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t<h1>GifExpertApp</h1>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t// <li key={category}>{category}</li>\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GifExpertApp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}